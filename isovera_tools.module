<?php
/**
 * @file
 * Code for the Isovera developer tools module
 */

/**
 * @TODO: Add git commit functionality to dlco
 * @TODO: Add support for remote site aliases
 * @TODO: Make gzip optional
 * @TODO: Implement hook_backup_migrate_destinations()
 * @TODO: Environment prefix from local settings configured variable
 * @TODO: Add optional machine name prefix as alternative to a local settings variable
 */

/**
 * Implements hook_install()
 */
function isovera_tools_install() {
  variable_set('isovera_tools_backup_dir', 'private://backup');

  $profile = db_insert('backup_migrate_profiles')
    ->fields(array(
      'profile_id' => 'isovera_tools',
      'name' => 'Isovera Tools: Git branch, commit and ISO date',
      'filename' => '[site:git-branch]-[current-date:custom:Y-m-d]-[site:git-hash]',
      'append_timestamp' => 0,
      'timestamp_format' => 'Y-m-d\\TH-i-s',
      'filters' => 'a:9:{s:11:"compression";s:4:"gzip";s:21:"notify_success_enable";i:0;s:20:"notify_success_email";s:0:"";s:21:"notify_failure_enable";i:0;s:20:"notify_failure_email";s:0:"";s:18:"utils_site_offline";i:0;s:26:"utils_site_offline_message";s:0:"";s:17:"utils_description";s:0:"";s:12:"destinations";a:1:{s:2:"db";a:4:{s:14:"exclude_tables";a:0:{}s:13:"nodata_tables";a:0:{}s:17:"utils_lock_tables";i:0;s:13:"use_mysqldump";i:0;}}}'))
    ->execute();
}

/**
 * Implements hook_token_info()
 */
function isovera_tools_token_info() {
  $site['git-branch'] = array(
    'name' => t("Git Branch"),
    'description' => t("The current git branch name."),
  );

  $site['git-hash'] = array(
    'name' => t("Git Hash (abbreviated)"),
    'description' => t("The abbreviated git hash of the current commit."),
  );

  return array(
    'tokens' => array('site' => $site),
  );
}

/**
 * Implements hook_tokens()
 */
function isovera_tools_tokens($type, $tokens, $data = array(), $options = array()) {
  if ($type == 'site') {
    $replacements = array();
    foreach ($tokens as $name => $original) {
      switch ($name) {
	    case 'git-branch':
		  $replacements[$original] = exec('git rev-parse --abbrev-ref HEAD');
		  break;
		case 'git-hash':
		  $replacements[$original]= exec('git log -n 1 --pretty=%h');
		  break;
	  }
	}
    return $replacements;
  }
}
